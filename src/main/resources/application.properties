spring.application.name=api-adocao

#spring.datasource.url=jdbc:h2:file:Z:\\UNIVESP\\Projeto Integrador II\\api-adocao\\database\\adocaodb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
#spring.datasource.url=jdbc:h2:mem:adocaodb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=none
#spring.h2.console.enabled=true
#spring.h2.console.path=/db

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#spring.sql.init.data-locations: classpath:database/scripts.sql



# --- Configuração de Conexão Oracle (CDB$ROOT com usuário comum ---

# URL de Conexão: jdbc:oracle:thin:@<host>:<porta>:<SID>
# Host: localhost (porque o docker está na minha máquina)
# Porta: 1521 (a porta mapeada no comando docker run)
# SID: XE (o System ID do Container Raiz - CDB$ROOT)
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE

# Usuário: O nome COMPLETO do usuário comum, incluindo o prefixo C##
spring.datasource.username=C##desenvolvimento

# Senha: A senha definida para o usuário C##desenvolvimento
spring.datasource.password=desenvolvimentodb

# Classe do Driver JDBC Oracle
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

# --- Configurações JPA/ Hibernate ---

# Dialeto: Informa ao Hibernate como gerar SQL específico para Oracle
# Use Oracle12cDialect ou um mais recente se souber que é compatível
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# Controle de Schema (DDL - Data Definition Language): MUITO CUIDADO!
# 'update': Hibernate tenta criar/ atualizar tabelas baseado nas suas Entidades Java. Útil no início, mas arriscado
# 'validate': Verifica se o schema no banco corresponde às Entidades. Não altera nada. Mais seguro.
# 'none': Hibernate não faz nada com o schema. Você gerencia manualmente (recomendado para produção com Flyway/ Liquibase
# 'create': APAGA TUDO e recria o schema a cada inicialização. PERIGOSO!
spring.jpa.hibernate.ddl-auto=update

# Opcional: Formatar o SQL gerado pelo Hibernate nos logs da aplicação
spring.jpa.show-sql=true

# Opicional: Formatar o SQL mostrado nos logs para melhor leitura
spring.jpa.properties.hibernate.format_sql=true